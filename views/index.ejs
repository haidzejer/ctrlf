  <nav class="navbar navbar-default navbar-fixed-top" style="border: 0px; background-color: rgba(0,0,0,0)">

          <% if(isLoggedIn) { %>
            <div class="dropdown pull-right">
              <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" style="border: 0px; background-color: rgba(0,0,0,0)">
                <span style="font-size: 22px; color: grey;" class="glyphicon glyphicon-th"></span>
              </button>
              <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                <li><a href="/profile">My Profile</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="/logout">Logout</a></li>
              </ul>
            </div>
          <% } %>
          <% if (!isLoggedIn) { %>
            <a href="/login" class="btn btn-clear" style="margin-top: 5px;">Login</a>
            <a href="/signup" class="btn btn-clear" style="margin-top: 5px;">Sign Up</a>
          <% } %>

  </nav>

<div class="container">

<div class="text-center col-md-8 col-md-offset-2" style="font-size: 0; margin-bottom: 30px; margin-top: 10%">
    <h1 style="font-size: 20px; font: sans-serif; font-weight: bold; font-family: 'Varela', sans-serif;">
        <span style="color: #4285F4; font-size: 68px;">C</span>
        <span style="color: #DB4437; font-size: 68px;">t</span>
        <span style="color: #F4B400; font-size: 68px;">r</span>
        <span style="color: #4285F4; font-size: 68px;">l</span>
        <span style="color: #0F9D58; font-size: 68px;">+</span>
        <span style="color: #DB4437; font-size: 68px;">F</span>
    </h1>
</div>

<div class="search_form" style="width: 60%; margin: 0 auto;">
    <input type="text" name="" value="" placeholder="Search..."  id="search_text" style="box-shadow: 2px 2px 2px lightgrey; border-radius: 1px;"><br /><br />
    <center>
      <button type="button" name="button" id="search">Search</button>
    </center>
</div>

<div class="search_results" id="search_results" style="list-style: none">
  <ul>

  </ul>
</div>
</div>

<script>
  // Global variables used throughout the code
  var $searchText = $('#search_text')
  var $searchBtn = $('#search')
  var $searchResults = $('#search_results')
  var $searchResult = $('.search_result')
  var myVar
  var $searchText = $('#search_text')

  // Change border color of search box when they enter the searchbox
  $searchText.on('click', function () {
    $(this).css('border', '1px solid lightgrey')
  })

  // This checks if used pressed enter on the keyboard. If so it "click" on the search button
  $searchText.keyup(function(event){
      if(event.keyCode == 13){
          $searchBtn.click()
      }
  })


  // Add click event listener to search button
  $searchBtn.on('click', function(){
    // This initiates the Search.... animation
    startRetrievingResultsAnimation()
    // Get the search text from the text box
    var filterText = $searchText.val()
    // Do an ajax call to post search text to /search route
    var requestSettings = {
      method: 'post',
      url: '/search/',
      data: JSON.stringify({text: filterText}),
      contentType:'application/json'
      }

    $.ajax(requestSettings).done(function(rawResults) {
      // Do the following things when results are returned
      stopTimer()
      displayResults(rawResults)
      displayNumberOfComments(rawResults)
      displayHelpfulCount(rawResults)
    })
  })


  // Function to display number of people who found page helpful
  function displayHelpfulCount(rawResults){
    rawResults.webpages.forEach((result) => {

    var requestSettings = {
      method: 'post',
      url: '/webpages/findHelpfulCount',
      data: JSON.stringify({url: result.uri}),
      contentType:'application/json'
      }

      closureFunctionComments(result.uri)


    function closureFunctionComments(uri){
      var url = uri
      counter = 0
      $.ajax(requestSettings).done(function(helpfulCount) {
        counter++
        $("#helpfulCount" + result.index).html(" " + helpfulCount + " Found this page helpful")
        })
    }
      }) // Closes for loop
    }

  // Function to retrieve number of comments for a specific search query result page
  function displayNumberOfComments(rawResults){
    rawResults.webpages.forEach((result) => {

    var requestSettings = {
      method: 'post',
      url: '/webpages/findComments',
      data: JSON.stringify({url: result.uri}),
      contentType:'application/json'
      }

      closureFunctionComments(result.uri)

    function closureFunctionComments(uri){
      var url = uri
      counter = 0
      $.ajax(requestSettings).done(function(commentsLength) {
        counter++
        $("#comment" + result.index).html("Comments (" + commentsLength + ") ")
        })
    }
      }) // Closes for loop
    }


  // Helper function to append returned results to the searchResults div
  function displayResults(rawResults){
    $searchResults.html("")
    var count = 0
    rawResults.webpages.forEach((result) => {
    var result_uri = result.uri
    $searchResults.append(`<li class="search_result_li">
                                <span class="search_result_name" id='${count}' url="${result.uri}" style="cursor:pointer">${result.name}</span><br>
                                            ${result.snippet}<br>
                                <span class="search_result_url" id='${count}' url="${result.uri}" style="cursor:pointer">${result.displayUrl}</span>

                                <span class="comments" id='comment${count}'> </span><br>
                                <span class="helpful_count" id='helpfulCount${count}' url="${result.uri}"></span>
                                <span class="helpful_link" id='helpful${count}' url="${result.uri}" style="cursor:pointer"> &nbsp&nbsp&nbspüëç </span><br>
                            </li>`)

closureFunctionHelpful(count)

function closureFunctionHelpful(countArg){
  var hCount = countArg

  $('#helpful' + hCount).on("click", function(){
    var url = $(this).attr("url")
   //  console.log(url);

    var requestSettings = {
      method: 'patch',
      url: '/webpages/increaseHelpfulCount/',
      data: JSON.stringify({url: url }),
      contentType:'application/json',
     }
//helpful count function
    $.ajax(requestSettings).done(function(exists) {
      if(exists){
        $('#helpful' + hCount)[0].innerHTML = "&nbsp&nbsp&nbsp Thanks for letting us know!"
        $('#helpful' + hCount).removeAttr("style")
        $('#helpful' + hCount).unbind()
        displayHelpfulCount(rawResults)
      }
      else {
        alert("Only visited pages can be marked as helpful")
      }
     })
  })
}

   $('#' + count).on("click", function(){
      var requestSettings = {
        method: 'post',
        url: '/webpages/createOrFind/',
        data: JSON.stringify({url: $(this).attr("url")}),
        contentType:'application/json'
        }

      $.ajax(requestSettings).done(function(pageID) {
          location.href = `webpages/${pageID}`

      })
    })
    count++
  }
)}


  // Check if there is some text in the text box when this page is reached
  // This is to allow previous search results to be retrieved and displayed again after user comes back to the apge
  if($searchText.val() && $searchText.val() != "" ){
    $searchBtn.click()
  }

  // The next three functions are to display a message while results are being fetched
  var counter = 0
  function startRetrievingResultsAnimation(){
    myVar = setInterval(function(){ myTimer() }, 1000)
  }

  function myTimer() {
    counter++
    $searchResults.html("<br /><br><center><h2 id='searching'>Searching." + new Array(counter % 10).join('.') + "</h2></center>")
    }

  function stopTimer() {
      clearInterval(myVar)
  }

</script>
